;; Object semanticdb-project-database-file-14e106c
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-14e106c"
  :tables
  (list
    (semanticdb-table "semanticdb-table-15d168c"
      :major-mode python-mode
      :tags 
        '( ("math" include nil nil [1 12])
            ("mu_e" variable nil nil [35 51])
            ("mu_s" variable nil nil [96 116])
            ("R_e" variable nil nil [159 174])
            ("smaEarth" variable nil nil [207 230])
            ("wEarth" variable nil nil [259 306])
            ("R_SoI" code nil nil [307 346])
            ("secondsPerDay" variable nil nil [347 368]))          
      :file "Constants.py"
      :pointmax 369
      :fsize 368
      :lastmodtime '(23565 32907 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-16875cc"
      :major-mode python-mode
      :tags 
        '( ("\"\"\"Translation of fortran 77 rkf45 to python via matlab \"\"\"" code nil nil [24 83])
            ("numpy" include nil nil [84 103])
            ("sys" include nil nil [104 124])
            ("r8_rkf45" function
               (:documentation "
    y, yp, t, flag  = r8_rkf45 ( f, neqn, y, yp, t, tout, relerr, abserr, flag )
#********************************************
#
## R8_RKF45 carries out the Runge-Kutta-Fehlberg method (double precision).
#
#  Discussion:
#
#    This routine is primarily designed to solve non-stiff and mildly stiff
#    differential equations when derivative evaluations are inexpensive.
#    It should generally not be used when the user is demanding
#    high accuracy.
#
#    This function integrates a system of NEQN first-order ordinary differential
#    equations of the form:
#
#      dY(i)/dT = F(T,Y(1),Y(2), ...  ,Y(NEQN))
#
#    where the Y(1:NEQN) are given at T.
#    Typically the subroutine is used to integrate from T to TOUT but it
#    can be used as a one-step integrator to advance the solution a
#    single step in the direction of TOUT.  On return, the parameters in
#    the call list are set for continuing the integration.  The user has
#    only to call again (and perhaps define a new value for TOUT).
#
#    Before the first call, the user must
#
#    * supply the function  F(T,Y) to evaluate the right hand side YP;
#
#    * initialize the parameters:
#      NEQN, Y(1:NEQN), T, TOUT, RELERR, ABSERR, FLAG.
#      In particular, T should initially be the starting point for integration,
#      Y should be the value of the initial conditions, and FLAG should
#      normally be +1.
#
#    Normally, the user only sets the value of FLAG before the first call, and
#    thereafter, the program manages the value.  On the first call, FLAG should
#    normally be +1 (or -1 for single step mode.)  On normal return, FLAG will
#    have been reset by the program to the value of 2 (or -2 in single
#    step mode), and the user can continue to call the routine with that
#    value of FLAG.
#
#    (When the input magnitude of FLAG is 1, this indicates to the program
#    that it is necessary to do some initialization work.  An input magnitude
#    of 2 lets the program know that that initialization can be skipped,
#    and that useful information was computed earlier.)
#
#    The function returns with all the information needed to continue
#    the integration.  If the integration reached TOUT, the user need only
#    define a new TOUT and call again.  In the one-step integrator
#    mode, returning with FLAG = -2, the user must keep in mind that
#    each step taken is in the direction of the current TOUT.  Upon
#    reaching TOUT, indicated by the output value of FLAG switching to 2,
#    the user must define a new TOUT and reset FLAG to -2 to continue
#    in the one-step integrator mode.
#
#    In some cases, an error or difficulty occurs during a call.  In that case,
#    the output value of FLAG is used to indicate that there is a problem
#    that the user must address.  These values include:
#
#    * 3, integration was not completed because the input value of RELERR, the
#      relative error tolerance, was too small.  RELERR has been increased
#      appropriately for continuing.  If the user accepts the output value of
#      RELERR, then simply reset FLAG to 2 and continue.
#
#    * 4, integration was not completed because more than MAXNFE derivative
#      evaluations were needed.  This is approximately (MAXNFE/6) steps.
#      The user may continue by simply calling again.  The function counter
#      will be reset to 0, and another MAXNFE function evaluations are allowed.
#
#    * 5, integration was not completed because the solution vanished,
#      making a pure relative error test impossible.  The user must use
#      a non-zero ABSERR to continue.  Using the one-step integration mode
#      for one step is a good way to proceed.
#
#    * 6, integration was not completed because the requested accuracy
#      could not be achieved, even using the smallest allowable stepsize.
#      The user must increase the error tolerances ABSERR or RELERR before
#      continuing.  It is also necessary to reset FLAG to 2 (or -2 when
#      the one-step integration mode is being used).  The occurrence of
#      FLAG = 6 indicates a trouble spot.  The solution is changing
#      rapidly, or a singularity may be present.  It often is inadvisable
#      to continue.
#
#    * 7, it is likely that this routine is inefficient for solving
#      this problem.  Too much output is restricting the natural stepsize
#      choice.  The user should use the one-step integration mode with
#      the stepsize determined by the code.  If the user insists upon
#      continuing the integration, reset FLAG to 2 before calling
#      again.  Otherwise, execution will be terminated.
#
#    * 8, invalid input parameters, indicates one of the following:
#      NEQN <= 0;
#      T = TOUT and |FLAG| /= 1;
#      RELERR < 0 or ABSERR < 0;
#      FLAG == 0  or FLAG < -2 or 8 < FLAG.
#
#  Licensing:
#
#    This code is distributed under the GNU LGPL license.
#
#  Modified:
#
#    05 April 2011
#
#  Author:
#
#    Original FORTRAN77 version by Herman Watts, Lawrence Shampine.
#    MATLAB version by John Burkardt and then to Python by Peter Monk
#
#  Reference:
#
#    Erwin Fehlberg,
#    Low-order Classical Runge-Kutta Formulas with Stepsize Control,
#    NASA Technical Report R-315, 1969.
#
#    Lawrence Shampine, Herman Watts, S Davenport,
#    Solving Non-stiff Ordinary Differential Equations - The State of the Art,
#    SIAM Review,
#    Volume 18, pages 376-411, 1976.
#
#  Parameters:
#
#    Input, function F, a user-supplied function to evaluate the
#    derivatives dYdT(T), of the form:
#     def f ( t, y ):
#         <statements>
#         return(yp)
#
#    Input, integer NEQN, the number of equations to be integrated.
#
#    Input/output, real Y(NEQN), the current solution vector at T.
#
#    Input/output, real YP(NEQN), the current value of the
#    derivative of the dependent variable.  The user should not set or alter
#    this information%
#
#    Input/output, real T, the current value of the independent
#    variable.
#
#    Input, real TOUT, the output point at which solution is
#    desired.  TOUT = T is allowed on the first call only, in which case
#    the routine returns with FLAG = 2 if continuation is possible.
#
#    Input, real RELERR, ABSERR, the relative and absolute
#    error tolerances for the local error test.  At each step the code
#    requires:
#      abs ( local error ) <= RELERR * abs ( Y ) + ABSERR
#    for each component of the local error and the solution vector Y.
#    RELERR cannot be \"too small\".  If the routine believes RELERR has been
#    set too small, it will reset RELERR to an acceptable value and return
#    immediately for user action.
#
#    Input/output, integer FLAG, indicator for status of integration.
#    On the first call, set FLAG to +1 for normal use, or to -1 for single
#    step mode.  On return, a value of 2 or -2 indicates normal progress,
#    while any other value indicates a problem that should be addressed.
#
    "
                :arguments 
                  ( ("f" variable nil (reparse-symbol function_parameters) [140 141])
                    ("neqn" variable nil (reparse-symbol function_parameters) [143 147])
                    ("y" variable nil (reparse-symbol function_parameters) [149 150])
                    ("yp" variable nil (reparse-symbol function_parameters) [152 154])
                    ("t" variable nil (reparse-symbol function_parameters) [156 157])
                    ("tout" variable nil (reparse-symbol function_parameters) [159 163])
                    ("relerr" variable nil (reparse-symbol function_parameters) [165 171])
                    ("abserr" variable nil (reparse-symbol function_parameters) [173 179])
                    ("flag" variable nil (reparse-symbol function_parameters) [181 185]))                  )
                nil [125 17623])
            ("r8_fehl" function
               (:documentation "
#*****************************************************************************80
#
## R8_FEHL takes one Fehlberg fourth-fifth order step.
#
#  Discussion:
#
#    This routine integrates a system of NEQN first order ordinary differential
#    equations of the form
#      dY(i)/dT = F(T,Y(1:NEQN))
#    where the initial values Y and the initial derivatives
#    YP are specified at the starting point T.
#
#    The routine advances the solution over the fixed step H and returns
#    the fifth order (sixth order accurate locally) solution
#    approximation at T+H in array S.
#
#    The formulas have been grouped to control loss of significance.
#    The routine should be called with an H not smaller than 13 units of
#    roundoff in T so that the various independent arguments can be
#    distinguished.
#
#  Licensing:
#
#    This code is distributed under the GNU LGPL license.
#
#  Modified:
#
#    30 August 2010
#
#  Author:
#
#    Original FORTRAN77 version by Herman Watts, Lawrence Shampine.
#    MATLAB version by John Burkardt.
#
#  Reference:
#
#    Erwin Fehlberg,
#    Low-order Classical Runge-Kutta Formulas with Stepsize Control,
#    NASA Technical Report R-315, 1969.
#
#    Lawrence Shampine, Herman Watts, S Davenport,
#    Solving Non-stiff Ordinary Differential Equations - The State of the Art,
#    SIAM Review,
#    Volume 18, pages 376-411, 1976.
#
#  Parameters:
#
#    Input, function F, a user-supplied function to evaluate the
#    derivatives dYdT, of the form:
#
#      function yp = f ( t, y )
#
#    Input, integer NEQN, the number of equations to be integrated.
#
#    Input, real Y(NEQN), the current value of the
#    dependent variable.
#
#    Input, real T, the current value of the independent
#    variable.
#
#    Input, real H, the step size to take.
#
#    Input, real YP(NEQN), the current value of the
#    derivative of the dependent variable.
#
#    Output, real F1(NEQN), F2(NEQN), F3(NEQN), F4(NEQN),
#    F5(NEQN), derivative values needed for the computation.
#
#    Output, real S(NEQN), the estimate of the solution at T+H.
#
    "
                :arguments 
                  ( ("f" variable nil (reparse-symbol function_parameters) [17638 17639])
                    ("neqn" variable nil (reparse-symbol function_parameters) [17641 17645])
                    ("y" variable nil (reparse-symbol function_parameters) [17647 17648])
                    ("t" variable nil (reparse-symbol function_parameters) [17650 17651])
                    ("h" variable nil (reparse-symbol function_parameters) [17653 17654])
                    ("yp" variable nil (reparse-symbol function_parameters) [17656 17658]))                  )
                nil [17624 20595])
            ("error" function
               (:documentation "
    Simple error handling
    "
                :arguments 
                  ( ("string" variable nil (reparse-symbol function_parameters) [20606 20612]))                  )
                nil [20596 20702]))          
      :file "rkf45.py"
      :pointmax 20702
      :fsize 20701
      :lastmodtime '(23530 28179 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-1687a5c"
      :major-mode python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("math" include nil nil [20 31])
            ("mu_e" variable nil nil [55 70])
            ("mu_s" variable nil nil [114 129])
            ("R_e" variable nil nil [171 184])
            ("m_e" variable nil nil [216 232])
            ("m_sc" variable nil nil [251 262])
            ("smaEarth" variable nil nil [287 311])
            ("mu_e" code nil nil [370 390])
            ("mu_s" code nil nil [391 411])
            ("smaEarth" code nil nil [412 435])
            ("wEarth" variable nil nil [436 483])
            ("R_SoI" code nil nil [484 523])
            ("dynamics" function (:arguments 
              ( ("t" variable nil (reparse-symbol function_parameters) [538 539])
                ("y" variable nil (reparse-symbol function_parameters) [541 542]))              ) nil [525 1022])
            ("hamiltonian" function (:arguments 
              ( ("t" variable nil (reparse-symbol function_parameters) [1039 1040])
                ("y" variable nil (reparse-symbol function_parameters) [1042 1043]))              ) nil [1023 1753]))          
      :file "Dynamics.py"
      :pointmax 1759
      :fsize 1758
      :lastmodtime '(23560 44221 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-159b8dc"
      :major-mode python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("math" include nil nil [20 31])
            ("Constants" include nil nil [33 56])
            ("DU" variable nil nil [58 66])
            ("TU" variable nil nil [67 75])
            ("inSoI" variable nil nil [76 89])
            ("setUnits" function (:arguments 
              ( ("d" variable nil (reparse-symbol function_parameters) [103 104])
                ("t" variable nil (reparse-symbol function_parameters) [106 107]))              ) nil [90 151])
            ("dynamics_ks" function (:arguments 
              ( ("t" variable nil (reparse-symbol function_parameters) [172 173])
                ("y" variable nil (reparse-symbol function_parameters) [175 176]))              ) nil [156 1708])
            ("accel3B" function (:arguments 
              ( ("r3" variable nil (reparse-symbol function_parameters) [1721 1723])
                ("r2" variable nil (reparse-symbol function_parameters) [1725 1727])
                ("mu1" variable nil (reparse-symbol function_parameters) [1729 1732])
                ("mu2" variable nil (reparse-symbol function_parameters) [1734 1737]))              ) nil [1709 1895])
            ("ksmat" function (:arguments 
              ( ("u" variable nil (reparse-symbol function_parameters) [1906 1907]))              ) nil [1896 2123])
            ("ks2cart" function (:arguments 
              ( ("u" variable nil (reparse-symbol function_parameters) [2136 2137]))              ) nil [2124 2570])
            ("ks_init" function (:arguments 
              ( ("r0" variable nil (reparse-symbol function_parameters) [2583 2585])
                ("v0" variable nil (reparse-symbol function_parameters) [2587 2589])
                ("t0" variable nil (reparse-symbol function_parameters) [2591 2593])
                ("mu" variable nil (reparse-symbol function_parameters) [2595 2597])
                ("V" variable nil (reparse-symbol function_parameters) [2599 2600]))              ) nil [2571 3403]))          
      :file "Dynamics_KS.py"
      :pointmax 3403
      :fsize 3402
      :lastmodtime '(23565 31811 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-1827cdc"
      :major-mode python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("math" include nil nil [20 31])
            ("matplotlib.pyplot" include nil nil [32 63])
            ("datetime" include nil nil [64 79])
            ("Constants" include nil nil [81 104])
            ("rkf45" include nil nil [105 124])
            ("Dynamics" include nil nil [125 167])
            ("Dynamics_KS" include nil nil [168 238])
            ("print" code nil nil [240 308])
            ("r0" variable nil nil [341 351])
            ("V0" variable nil nil [352 360])
            ("V_circ" variable nil nil [362 389])
            ("V_e" code nil nil [390 415])
            ("print" code nil nil [417 504])
            ("r_e0" variable nil nil [593 626])
            ("v_e0" variable nil nil [697 737])
            ("r_sc0" code nil nil [834 869])
            ("v_sc0" code nil nil [926 961])
            ("r_sc_e" variable nil nil [1014 1051])
            ("print" code nil nil [1053 1082])
            ("simLength" code nil nil [1084 1126])
            ("endDate" variable nil nil [1127 1146])
            ("if" code nil nil [1148 1566])
            ("setUnits" code nil nil [1589 1605])
            ("print" code nil nil [1607 1645])
            ("J" variable nil nil [1646 1679])
            ("N" variable nil nil [1680 1692])
            ("simTime" variable nil nil [1693 1730])
            ("flag" variable nil nil [1731 1739])
            ("relerr" variable nil nil [1740 1753])
            ("abserr" variable nil nil [1754 1767])
            ("y_out" variable nil nil [1790 1814])
            ("x_out" variable nil nil [1815 1838])
            ("x_gc_out" variable nil nil [1839 1865])
            ("e_out" variable nil nil [1866 1889])
            ("H_out" variable nil nil [1890 1912])
            ("r_sc0" code nil nil [1914 1930])
            ("v_sc0" code nil nil [1931 1952])
            ("x_out" variable nil nil [1954 1972])
            ("e_out" code nil nil [1973 2017])
            ("x_gc_out" code nil nil [2018 2060])
            ("u0" variable nil nil [2062 2100])
            ("y_out" variable nil nil [2102 2117])
            ("yp" variable nil nil [2118 2138])
            ("Hrel" variable nil nil [2139 2160])
            ("exitFlag" variable nil nil [2162 2177])
            ("i" variable nil nil [2178 2183])
            ("while" code nil nil [2184 4315])
            ("new_e_out" variable nil nil [4332 4369])
            ("a" variable nil nil [4370 4388])
            ("new_e_out" variable nil nil [4390 4418])
            ("new_e_out" variable nil nil [4419 4462])
            ("new_e_out" variable nil nil [4463 4523])
            ("new_e_out" variable nil nil [4524 4553])
            ("new_x_out" variable nil nil [4555 4583])
            ("new_x_out" variable nil nil [4584 4627])
            ("new_x_out" variable nil nil [4628 4688])
            ("new_x_out" variable nil nil [4689 4718])
            ("new_x_gc_out" variable nil nil [4720 4751])
            ("new_x_gc_out" variable nil nil [4752 4801])
            ("new_x_gc_out" variable nil nil [4802 4868])
            ("new_x_gc_out" variable nil nil [4869 4904])
            ("print" code nil nil [4906 4975])
            ("fig2, ax2" code nil nil [4977 5003])
            ("ax2" code nil nil [5004 5052])
            ("ax2" code nil nil [5053 5137])
            ("ax2" code nil nil [5138 5164])
            ("fig2" code nil nil [5165 5198])
            ("fig, ax" code nil nil [5200 5224])
            ("ax" code nil nil [5225 5264])
            ("ax" code nil nil [5265 5304])
            ("ax" code nil nil [5305 5330])
            ("ax" code nil nil [5331 5414])
            ("ax" code nil nil [5415 5454])
            ("fig" code nil nil [5455 5484])
            ("fig1, ax1" code nil nil [5486 5512])
            ("ax1" code nil nil [5513 5560])
            ("ax1" code nil nil [5561 5650])
            ("fig1" code nil nil [5651 5682])
            ("plt" code nil nil [5684 5694]))          
      :file "Main_KS.py"
      :pointmax 5695
      :fsize 5694
      :lastmodtime '(23568 35468 135215 659000)
      :unmatched-syntax '(($EOI 5695 . 5695)))
    (semanticdb-table "semanticdb-table-18a9f1c"
      :major-mode makefile-gmake-mode
      :tags 
        '( ("all" function nil nil [1 22]))          
      :file "Makefile"
      :pointmax 22
      :fsize 21
      :lastmodtime '(23568 35544 156016 487000)
      :unmatched-syntax '((shell-command 7 . 21) (bol 6 . 6)))
    (semanticdb-table "semanticdb-table-18c827c"
      :major-mode python-mode
      :tags 
        '( ("numpy" include nil nil [1 19])
            ("math" include nil nil [20 31])
            ("matplotlib.pyplot" include nil nil [32 63])
            ("datetime" include nil nil [65 80])
            ("rkf45" include nil nil [82 101])
            ("Dynamics" include nil nil [102 144])
            ("Dynamics_KS" include nil nil [145 198])
            ("print" code nil nil [200 268])
            ("mu_e" variable nil nil [291 306])
            ("mu_s" variable nil nil [350 365])
            ("R_e" variable nil nil [407 420])
            ("m_e" variable nil nil [452 468])
            ("m_sc" variable nil nil [487 498])
            ("smaEarth" variable nil nil [523 547])
            ("mu_e" code nil nil [606 626])
            ("mu_s" code nil nil [627 647])
            ("smaEarth" code nil nil [648 671])
            ("wEarth" variable nil nil [672 719])
            ("R_SoI" code nil nil [720 759])
            ("debug" variable nil nil [785 798])
            ("secondsPerDay" code nil nil [799 822])
            ("if" code nil nil [824 1043])
            ("N" variable nil nil [1048 1080])
            ("simTime" variable nil nil [1081 1118])
            ("flag" variable nil nil [1119 1127])
            ("relerr" variable nil nil [1128 1142])
            ("abserr" variable nil nil [1143 1157])
            ("y_out" variable nil nil [1180 1203])
            ("x_out" variable nil nil [1204 1227])
            ("x_g_out" variable nil nil [1228 1253])
            ("e_out" variable nil nil [1254 1277])
            ("H_out" variable nil nil [1278 1300])
            ("r_e0" variable nil nil [1323 1357])
            ("v_e0" variable nil nil [1496 1524])
            ("r_sc0" code nil nil [1625 1663])
            ("v_sc0" code nil nil [1757 1793])
            ("r_e0" code nil nil [2077 2092])
            ("v_e0" code nil nil [2093 2108])
            ("r_sc0" code nil nil [2109 2126])
            ("v_sc0" code nil nil [2127 2144])
            ("print" code nil nil [2145 2157])
            ("x_out" variable nil nil [2159 2177])
            ("e_out" code nil nil [2178 2217])
            ("x_g_out" code nil nil [2218 2259])
            ("y0" variable nil nil [2312 2340])
            ("y_out" variable nil nil [2342 2357])
            ("yp" variable nil nil [2358 2377])
            ("Hrel" variable nil nil [2378 2399])
            ("for" code nil nil [2401 3100])
            ("print" code nil nil [3101 3170])
            ("fig2, ax2" code nil nil [3172 3198])
            ("ax2" code nil nil [3199 3237])
            ("ax2" code nil nil [3238 3340])
            ("ax2" code nil nil [3341 3367])
            ("fig2" code nil nil [3368 3401])
            ("fig, ax" code nil nil [3403 3427])
            ("ax" code nil nil [3428 3459])
            ("ax" code nil nil [3460 3491])
            ("ax" code nil nil [3492 3517])
            ("ax" code nil nil [3518 3619])
            ("ax" code nil nil [3620 3659])
            ("fig" code nil nil [3660 3689])
            ("fig1, ax1" code nil nil [3691 3717])
            ("ax1" code nil nil [3718 3755])
            ("ax1" code nil nil [3756 3845])
            ("fig1" code nil nil [3846 3877])
            ("plt" code nil nil [3879 3889]))          
      :file "Main.py"
      :pointmax 3890
      :fsize 3889
      :lastmodtime '(23568 37054 906627 265000)
      :unmatched-syntax nil))
  :file "!home!jbailey!Dropbox!Academics!AME559!ResearchProject!cr3bp!PythonCode!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
