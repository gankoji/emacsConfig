;; Object semanticdb-project-database-file-198cca4
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-198cca4"
  :tables
  (list
    (semanticdb-table "semanticdb-table-193e930"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [19 83])
            ("warnings" include nil nil [85 100])
            ("datetime" include nil nil [101 131])
            ("numpy" include nil nil [133 151])
            ("sgp4.io" include nil nil [152 166])
            ("sgp4.propagation" include nil nil [167 190])
            ("astropy" include nil nil [191 215])
            ("numpy" include nil nil [216 265])
            ("represent" include nil nil [266 307])
            ("scipy.constants" include nil nil [308 344])
            ("sgp4.earth_gravity" include nil nil [345 381])
            ("utilities" include nil nil [390 412])
            ("" code nil nil [435 501])
            ("J2000" variable nil nil [528 567])
            ("__all__" variable nil nil [569 607])
            ("KeplerianElements" type
               (:documentation "Defines an orbit using keplerian elements.

    :param a: Semimajor axis [m]
    :param e: Eccentricity [-]
    :param i: Inclination [rad]
    :param raan: Right ascension of ascending node (:math:`\\Omega`) [rad]
    :param arg_pe: Argument of periapsis (:math:`\\omega`) [rad]
    :param M0: Mean anomaly at `ref_epoch` (:math:`M_{0}`) [rad]
    :param body: Reference body, e.g. earth
    :type body: :py:class:`orbital.bodies.Body`
    :param ref_epoch: Reference epoch
    :type ref_epoch: :py:class:`astropy.time.Time`
    "
                :superclasses ("RepresentationMixin" "object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("self" variable nil (reparse-symbol indented_block_body) [1324 1335])
                            ("self" variable nil (reparse-symbol indented_block_body) [1344 1354])
                            ("self" variable nil (reparse-symbol indented_block_body) [1363 1373])
                            ("self" variable nil (reparse-symbol indented_block_body) [1382 1398])
                            ("self" variable nil (reparse-symbol indented_block_body) [1407 1427])
                            ("self" variable nil (reparse-symbol indented_block_body) [1436 1448])
                            ("self" variable nil (reparse-symbol indented_block_body) [1458 1470])
                            ("self" variable nil (reparse-symbol indented_block_body) [1479 1495])
                            ("self" variable nil (reparse-symbol indented_block_body) [1504 1530])
                            ("self" variable nil (reparse-symbol indented_block_body) [1540 1551])
                            ("super" code nil (reparse-symbol indented_block_body) [1606 1647])
                            ("super" code nil (reparse-symbol indented_block_body) [1657 1698]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1222 1226])
                            ("a" variable nil (reparse-symbol function_parameters) [1228 1229])
                            ("e" variable nil (reparse-symbol function_parameters) [1236 1237])
                            ("i" variable nil (reparse-symbol function_parameters) [1241 1242])
                            ("raan" variable nil (reparse-symbol function_parameters) [1246 1250])
                            ("arg_pe" variable nil (reparse-symbol function_parameters) [1254 1260])
                            ("M0" variable nil (reparse-symbol function_parameters) [1264 1266])
                            ("body" variable nil (reparse-symbol function_parameters) [1287 1291])
                            ("ref_epoch" variable nil (reparse-symbol function_parameters) [1298 1307]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1209 1699])
                    ("with_altitude" function
                       (:documentation "Initialise with orbit for a given altitude.

        For eccentric orbits, this is the altitude at the
        reference anomaly, M0
        "
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [1739 1742])
                            ("altitude" variable nil (reparse-symbol function_parameters) [1744 1752])
                            ("body" variable nil (reparse-symbol function_parameters) [1754 1758])
                            ("e" variable nil (reparse-symbol function_parameters) [1760 1761])
                            ("i" variable nil (reparse-symbol function_parameters) [1765 1766])
                            ("raan" variable nil (reparse-symbol function_parameters) [1770 1774])
                            ("arg_pe" variable nil (reparse-symbol function_parameters) [1778 1784])
                            ("M0" variable nil (reparse-symbol function_parameters) [1788 1790])
                            ("ref_epoch" variable nil (reparse-symbol function_parameters) [1816 1825]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [1704 2234])
                    ("with_period" function
                       (:documentation "Initialise orbit with a given period."
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2272 2275])
                            ("period" variable nil (reparse-symbol function_parameters) [2277 2283])
                            ("body" variable nil (reparse-symbol function_parameters) [2285 2289])
                            ("e" variable nil (reparse-symbol function_parameters) [2291 2292])
                            ("i" variable nil (reparse-symbol function_parameters) [2296 2297])
                            ("raan" variable nil (reparse-symbol function_parameters) [2301 2305])
                            ("arg_pe" variable nil (reparse-symbol function_parameters) [2309 2315])
                            ("M0" variable nil (reparse-symbol function_parameters) [2319 2321])
                            ("ref_epoch" variable nil (reparse-symbol function_parameters) [2345 2354]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2239 2566])
                    ("with_apside_altitudes" function
                       (:documentation "Initialise orbit with given apside altitudes."
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [2614 2617])
                            ("alt1" variable nil (reparse-symbol function_parameters) [2619 2623])
                            ("alt2" variable nil (reparse-symbol function_parameters) [2625 2629])
                            ("i" variable nil (reparse-symbol function_parameters) [2631 2632])
                            ("raan" variable nil (reparse-symbol function_parameters) [2636 2640])
                            ("arg_pe" variable nil (reparse-symbol function_parameters) [2644 2650])
                            ("M0" variable nil (reparse-symbol function_parameters) [2654 2656])
                            ("body" variable nil (reparse-symbol function_parameters) [2690 2694])
                            ("ref_epoch" variable nil (reparse-symbol function_parameters) [2701 2710]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [2571 3268])
                    ("with_apside_radii" function
                       (:documentation "Initialise orbit with given apside radii."
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3312 3315])
                            ("radius1" variable nil (reparse-symbol function_parameters) [3317 3324])
                            ("radius2" variable nil (reparse-symbol function_parameters) [3326 3333])
                            ("i" variable nil (reparse-symbol function_parameters) [3335 3336])
                            ("raan" variable nil (reparse-symbol function_parameters) [3340 3344])
                            ("arg_pe" variable nil (reparse-symbol function_parameters) [3348 3354])
                            ("M0" variable nil (reparse-symbol function_parameters) [3358 3360])
                            ("body" variable nil (reparse-symbol function_parameters) [3390 3394])
                            ("ref_epoch" variable nil (reparse-symbol function_parameters) [3401 3410]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3273 3799])
                    ("from_state_vector" function
                       (:documentation "Create orbit from given state vector."
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [3843 3846])
                            ("r" variable nil (reparse-symbol function_parameters) [3848 3849])
                            ("v" variable nil (reparse-symbol function_parameters) [3851 3852])
                            ("body" variable nil (reparse-symbol function_parameters) [3854 3858])
                            ("ref_epoch" variable nil (reparse-symbol function_parameters) [3860 3869]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [3804 4995])
                    ("from_tle" function
                       (:documentation "Create object by parsing TLE using SGP4."
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [5030 5033])
                            ("line1" variable nil (reparse-symbol function_parameters) [5035 5040])
                            ("line2" variable nil (reparse-symbol function_parameters) [5042 5047])
                            ("body" variable nil (reparse-symbol function_parameters) [5049 5053]))                          
                        :decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [5000 5462])
                    ("epoch" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5491 5495]))                          
                        :documentation "Current epoch calculated from time since ref_epoch.")
                        (reparse-symbol indented_block_body) [5467 5633])
                    ("epoch" function
                       (:parent "dummy"
                        :decorators 
                          ( ("epoch.setter" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5666 5670])
                            ("value" variable nil (reparse-symbol function_parameters) [5672 5677]))                          
                        :documentation "Set epoch, adjusting current mean anomaly (from which
        other anomalies are calculated).
        ")
                        (reparse-symbol indented_block_body) [5638 5940])
                    ("t" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5965 5969]))                          
                        :documentation "Time since ref_epoch.")
                        (reparse-symbol indented_block_body) [5945 6031])
                    ("t" function
                       (:parent "dummy"
                        :decorators 
                          ( ("t.setter" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6056 6060])
                            ("value" variable nil (reparse-symbol function_parameters) [6062 6067]))                          
                        :documentation "Set time since ref_epoch, adjusting current mean anomaly (from which
        other anomalies are calculated).
        ")
                        (reparse-symbol indented_block_body) [6036 6312])
                    ("M" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6337 6341]))                          
                        :documentation "Mean anomaly [rad].")
                        (reparse-symbol indented_block_body) [6317 6401])
                    ("M" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6426 6430])
                            ("value" variable nil (reparse-symbol function_parameters) [6432 6437]))                          
                        :decorators 
                          ( ("M.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [6406 6635])
                    ("E" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6660 6664]))                          
                        :documentation "Eccentric anomaly [rad].")
                        (reparse-symbol indented_block_body) [6640 6766])
                    ("E" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6791 6795])
                            ("value" variable nil (reparse-symbol function_parameters) [6797 6802]))                          
                        :decorators 
                          ( ("E.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [6771 7021])
                    ("f" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7046 7050]))                          
                        :documentation "True anomaly [rad].")
                        (reparse-symbol indented_block_body) [7026 7142])
                    ("f" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7167 7171])
                            ("value" variable nil (reparse-symbol function_parameters) [7173 7178]))                          
                        :decorators 
                          ( ("f.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [7147 7392])
                    ("a" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7417 7421]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [7397 7447])
                    ("a" function
                       (:parent "dummy"
                        :decorators 
                          ( ("a.setter" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7472 7476])
                            ("value" variable nil (reparse-symbol function_parameters) [7478 7483]))                          
                        :documentation "Set semimajor axis and fix M0.

        To fix self.M0, self.n is called. self.n is a function of self.a
        This is safe, because the new value for self._a is set first, then
        self.M0 is fixed.
        ")
                        (reparse-symbol indented_block_body) [7452 7798])
                    ("r" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [7823 7827]))                          
                        :documentation "Position vector (:py:class:`orbital.utilities.Position`) [m].")
                        (reparse-symbol indented_block_body) [7803 8020])
                    ("v" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8045 8049]))                          
                        :documentation "Velocity vector (:py:class:`orbital.utilities.Velocity`) [m/s].")
                        (reparse-symbol indented_block_body) [8025 8422])
                    ("v" function
                       (:parent "dummy"
                        :decorators 
                          ( ("v.setter" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [8447 8451])
                            ("value" variable nil (reparse-symbol function_parameters) [8453 8458]))                          
                        :documentation "Set velocity by altering orbital elements.

        This method uses 3 position variables, and 3 velocity
        variables to set the 6 orbital elements.
        ")
                        (reparse-symbol indented_block_body) [8427 9673])
                    ("n" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9698 9702]))                          
                        :documentation "Mean motion [rad/s].")
                        (reparse-symbol indented_block_body) [9678 9788])
                    ("n" function
                       (:parent "dummy"
                        :decorators 
                          ( ("n.setter" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9813 9817])
                            ("value" variable nil (reparse-symbol function_parameters) [9819 9824]))                          
                        :documentation "Set mean motion by adjusting semimajor axis.")
                        (reparse-symbol indented_block_body) [9793 9942])
                    ("T" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [9967 9971]))                          
                        :documentation "Period [s].")
                        (reparse-symbol indented_block_body) [9947 10031])
                    ("T" function
                       (:parent "dummy"
                        :decorators 
                          ( ("T.setter" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10056 10060])
                            ("value" variable nil (reparse-symbol function_parameters) [10062 10067]))                          
                        :documentation "Set period by adjusting semimajor axis.")
                        (reparse-symbol indented_block_body) [10036 10196])
                    ("fpa" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10223 10227]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [10201 10303])
                    ("propagate_anomaly_to" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10333 10337])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [10339 10347]))                          
                        :documentation "Propagate to time in future where anomaly is equal to value passed in.

        :param M: Mean anomaly [rad]
        :param E: Eccentricity anomaly [rad]
        :param f: True anomaly [rad]

        This will propagate to a maximum of 1 orbit ahead.

        .. note::

           Only one parameter should be passed in.
        ")
                        (reparse-symbol indented_block_body) [10308 10783])
                    ("propagate_anomaly_by" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10813 10817])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [10819 10827]))                          
                        :documentation "Propagate to time in future by an amount equal to the anomaly passed in.

        :param M: Mean anomaly [rad]
        :param E: Eccentricity anomaly [rad]
        :param f: True anomaly [rad]

        .. note::

           Only one parameter should be passed in.
        ")
                        (reparse-symbol indented_block_body) [10788 11205])
                    ("__getattr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11226 11230])
                            ("attr" variable nil (reparse-symbol function_parameters) [11232 11236]))                          
                        :documentation "Dynamically respond to correct apsis names for given body.")
                        (reparse-symbol indented_block_body) [11210 11838])
                    ("apply_maneuver" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11862 11866])
                            ("maneuver" variable nil (reparse-symbol function_parameters) [11868 11876])
                            ("iter" variable nil (reparse-symbol function_parameters) [11878 11882])
                            ("copy" variable nil (reparse-symbol function_parameters) [11890 11894]))                          
                        :documentation " Apply maneuver to orbit.

        :param maneuver: Maneuver
        :type maneuver: :py:class:`maneuver.Maneuver`
        :param bool iter: Return an iterator.
        :param bool copy: Each orbit yielded by the generator will be a copy.

        If :code:`iter=True`, the returned iterator is of each intermediate orbit
        and the next operation, as shown in this table:

        +-------------------------------------+------------------+
        |                Orbit                |    Operation     |
        +=====================================+==================+
        | Original orbit                      | First operation  |
        +-------------------------------------+------------------+
        | Orbit after first operation applied | Second operation |
        +-------------------------------------+------------------+

        The final orbit is not returned, as it is accessible after the method has completed.

        If each orbit returned must not be altered, use :code:`copy=True`
        ")
                        (reparse-symbol indented_block_body) [11843 13241])
                    ("apocenter_radius" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13281 13285]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [13246 13325])
                    ("pericenter_radius" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13366 13370]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [13330 13410])
                    ("U" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13435 13439]))                          
                        :documentation "Radial direction unit vector.")
                        (reparse-symbol indented_block_body) [13415 13848])
                    ("V" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13873 13877]))                          
                        :documentation "Transversal in-flight direction unit vector.")
                        (reparse-symbol indented_block_body) [13853 14303])
                    ("W" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14328 14332]))                          
                        :documentation "Out-of-plane direction unit vector.")
                        (reparse-symbol indented_block_body) [14308 14549])
                    ("UVW" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14576 14580]))                          
                        :documentation "Calculate U, V, and W vectors simultaneously.

        In situations where all are required, this function may be faster
        but it exists for convenience.
        ")
                        (reparse-symbol indented_block_body) [14554 14839])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [14856 14860]))                          )
                        (reparse-symbol indented_block_body) [14844 16269]))                  
                :type "class")
                nil [610 16269]))          
      :file "elements.py"
      :pointmax 16269
      :fsize 16268
      :lastmodtime '(23530 24179 893515 0)
      :unmatched-syntax '((IMPORT 518 . 524) (MULT 525 . 526) (FROM 502 . 506) (PERIOD 507 . 508) (FROM 413 . 417) (PERIOD 418 . 419) (FROM 383 . 387) (PERIOD 388 . 389)))
    (semanticdb-table "semanticdb-table-17c67e4"
      :file "constants.py"
      :fsize 2351
      :lastmodtime '(23530 24179 893515 0))
    (semanticdb-table "semanticdb-table-17c6804"
      :major-mode python-mode
      :tags 
        '( ("__future__" include nil nil [19 83])
            ("collections" include nil nil [85 119])
            ("contextlib" include nil nil [120 157])
            ("copy" include nil nil [158 183])
            ("math" include nil nil [184 233])
            ("numpy" include nil nil [235 253])
            ("numpy" include nil nil [254 286])
            ("numpy" include nil nil [287 324])
            ("numpy.linalg" include nil nil [325 354])
            ("scipy.constants" include nil nil [355 385])
            ("MAX_ITERATIONS" variable nil nil [387 407])
            ("__all__" variable nil nil [409 959])
            ("ConvergenceError" type
               (:superclasses ("Exception")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [1015 1019]))                  
                :type "class")
                nil [976 1020])
            ("OrbitalWarning" type
               (:superclasses ("Warning")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [1057 1061]))                  
                :type "class")
                nil [1022 1062])
            ("saved_state" function
               (:documentation "Context manager to restore orbit upon leaving the block."
                :arguments 
                  ( ("orbit" variable nil (reparse-symbol function_parameters) [1128 1133]))                  
                :decorators 
                  ( ("contextmanager" function (:type "decorator") nil nil))                  )
                nil [1096 1283])
            ("lookahead" function
               (:documentation "Generates a series with lookahead to the next item."
                :arguments 
                  ( ("collection" variable nil (reparse-symbol function_parameters) [1299 1309])
                    ("fillvalue" variable nil (reparse-symbol function_parameters) [1311 1320]))                  )
                nil [1285 1607])
            ("eccentric_anomaly_from_mean" function
               (:documentation "Convert mean anomaly to eccentric anomaly.

    Implemented from [A Practical Method for Solving the Kepler Equation][1]
    by Marc A. Murison from the U.S. Naval Observatory

    [1]: http://murison.alpheratz.net/dynamics/twobody/KeplerIterations_summary.pdf
    "
                :arguments 
                  ( ("e" variable nil (reparse-symbol function_parameters) [1664 1665])
                    ("M" variable nil (reparse-symbol function_parameters) [1667 1668])
                    ("tolerance" variable nil (reparse-symbol function_parameters) [1670 1679]))                  )
                nil [1632 2616])
            ("eccentric_anomaly_from_true" function
               (:documentation "Convert true anomaly to eccentric anomaly."
                :arguments 
                  ( ("e" variable nil (reparse-symbol function_parameters) [2650 2651])
                    ("f" variable nil (reparse-symbol function_parameters) [2653 2654]))                  )
                nil [2618 2799])
            ("mean_anomaly_from_eccentric" function
               (:documentation "Convert eccentric anomaly to mean anomaly."
                :arguments 
                  ( ("e" variable nil (reparse-symbol function_parameters) [2833 2834])
                    ("E" variable nil (reparse-symbol function_parameters) [2836 2837]))                  )
                nil [2801 2919])
            ("mean_anomaly_from_true" function
               (:documentation "Convert true anomaly to mean anomaly."
                :arguments 
                  ( ("e" variable nil (reparse-symbol function_parameters) [2948 2949])
                    ("f" variable nil (reparse-symbol function_parameters) [2951 2952]))                  )
                nil [2921 3071])
            ("true_anomaly_from_eccentric" function
               (:documentation "Convert eccentric anomaly to true anomaly."
                :arguments 
                  ( ("e" variable nil (reparse-symbol function_parameters) [3105 3106])
                    ("E" variable nil (reparse-symbol function_parameters) [3108 3109]))                  )
                nil [3073 3238])
            ("true_anomaly_from_mean" function
               (:documentation "Convert mean anomaly to true anomaly."
                :arguments 
                  ( ("e" variable nil (reparse-symbol function_parameters) [3267 3268])
                    ("M" variable nil (reparse-symbol function_parameters) [3270 3271])
                    ("tolerance" variable nil (reparse-symbol function_parameters) [3273 3282]))                  )
                nil [3240 3437])
            ("orbit_radius" function
               (:documentation "Calculate scalar orbital radius."
                :arguments 
                  ( ("a" variable nil (reparse-symbol function_parameters) [3492 3493])
                    ("e" variable nil (reparse-symbol function_parameters) [3495 3496])
                    ("f" variable nil (reparse-symbol function_parameters) [3498 3499]))                  )
                nil [3475 3594])
            ("elements_for_apsides" function
               (:documentation "Calculate planar orbital elements for given apside radii."
                :arguments 
                  ( ("apocenter_radius" variable nil (reparse-symbol function_parameters) [3621 3637])
                    ("pericenter_radius" variable nil (reparse-symbol function_parameters) [3639 3656]))                  )
                nil [3596 3849])
            ("uvw_from_elements" function
               (:documentation "Return U, V, W unit vectors.

    :param float i: Inclination (:math:`i`) [rad]
    :param float raan:  Right ascension of ascending node (:math:`\\Omega`) [rad]
    :param float arg_pe: Argument of periapsis (:math:`\\omega`) [rad]
    :param float f: True anomaly (:math:`f`) [rad]
    :return: Radial direction unit vector (:math:`U`)
    :return: Transversal (in-flight) direction unit vector (:math:`V`)
    :return: Out-of-plane direction unit vector (:math:`W`)
    :rtype: :py:class:`numpy.ndarray`
    "
                :arguments 
                  ( ("i" variable nil (reparse-symbol function_parameters) [3873 3874])
                    ("raan" variable nil (reparse-symbol function_parameters) [3876 3880])
                    ("arg_pe" variable nil (reparse-symbol function_parameters) [3882 3888])
                    ("f" variable nil (reparse-symbol function_parameters) [3890 3891]))                  )
                nil [3851 4992])
            ("angular_momentum" function
               (:documentation "Return angular momentum.

    :param position: Position (r) [m]
    :type position: :py:class:`~orbital.utilities.Position`
    :param velocity: Velocity (v) [m/s]
    :type velocity: :py:class:`~orbital.utilities.Velocity`
    :return: Angular momentum (h) [N·m·s]
    :rtype: :py:class:`~orbital.utilities.XyzVector`
    "
                :arguments 
                  ( ("position" variable nil (reparse-symbol function_parameters) [5015 5023])
                    ("velocity" variable nil (reparse-symbol function_parameters) [5025 5033]))                  )
                nil [4994 5432])
            ("node_vector" function
               (:documentation "Return node vector.

    :param angular_momentum: Angular momentum (h) [N·m·s]
    :type angular_momentum: :py:class:`numpy.ndarray`
    :return: Node vector (n) [N·m·s]
    :rtype: :py:class:`~orbital.utilities.XyzVector`
    "
                :arguments 
                  ( ("angular_momentum" variable nil (reparse-symbol function_parameters) [5450 5466]))                  )
                nil [5434 5778])
            ("eccentricity_vector" function
               (:documentation "Return eccentricity vector.

    :param position: Position (r) [m]
    :type position: :py:class:`~orbital.utilities.Position`
    :param velocity: Velocity (v) [m/s]
    :type velocity: :py:class:`~orbital.utilities.Velocity`
    :param float mu: Standard gravitational parameter (:math:`\\mu`) [m\\ :sup:`3`\\ ·s\\ :sup:`-2`]
    :return: Eccentricity vector (ev) [-]
    :rtype: :py:class:`~orbital.utilities.XyzVector`
    "
                :arguments 
                  ( ("position" variable nil (reparse-symbol function_parameters) [5804 5812])
                    ("velocity" variable nil (reparse-symbol function_parameters) [5814 5822])
                    ("mu" variable nil (reparse-symbol function_parameters) [5824 5826]))                  )
                nil [5780 6535])
            ("specific_orbital_energy" function
               (:documentation "Return specific orbital energy.

    :param position: Position (r) [m]
    :type position: :py:class:`~orbital.utilities.Position`
    :param velocity: Velocity (v) [m/s]
    :type velocity: :py:class:`~orbital.utilities.Velocity`
    :param mu: Standard gravitational parameter (:math:`\\mu`) [m\\ :sup:`3`\\ ·s\\ :sup:`-2`]
    :type mu: float
    :return: Specific orbital energy (E) [J/kg]
    :rtype: float
    "
                :arguments 
                  ( ("position" variable nil (reparse-symbol function_parameters) [6565 6573])
                    ("velocity" variable nil (reparse-symbol function_parameters) [6575 6583])
                    ("mu" variable nil (reparse-symbol function_parameters) [6585 6587]))                  )
                nil [6537 7090])
            ("elements_from_state_vector" function (:arguments 
              ( ("r" variable nil (reparse-symbol function_parameters) [7123 7124])
                ("v" variable nil (reparse-symbol function_parameters) [7126 7127])
                ("mu" variable nil (reparse-symbol function_parameters) [7129 7131]))              ) nil [7092 9106])
            ("radius_from_altitude" function
               (:documentation "Return radius for a given altitude."
                :arguments 
                  ( ("altitude" variable nil (reparse-symbol function_parameters) [9158 9166])
                    ("body" variable nil (reparse-symbol function_parameters) [9168 9172]))                  )
                nil [9133 9260])
            ("altitude_from_radius" function
               (:documentation "Return altitude for a given radius."
                :arguments 
                  ( ("radius" variable nil (reparse-symbol function_parameters) [9287 9293])
                    ("body" variable nil (reparse-symbol function_parameters) [9295 9299]))                  )
                nil [9262 9385])
            ("impulse_from_finite" function
               (:documentation "Return impulsive velocity delta for constant thrust finite burn."
                :arguments 
                  ( ("acceleration" variable nil (reparse-symbol function_parameters) [9411 9423])
                    ("duration" variable nil (reparse-symbol function_parameters) [9425 9433]))                  )
                nil [9387 9546])
            ("mod" function
               (:documentation "Return the modulus after division of x by y.

    Python's x % y is best suited for integers, and math.mod returns with the
    sign of x.

    This function is modelled after Matlab's mod() function.
    "
                :arguments 
                  ( ("x" variable nil (reparse-symbol function_parameters) [9573 9574])
                    ("y" variable nil (reparse-symbol function_parameters) [9576 9577]))                  )
                nil [9565 10029])
            ("divmod" function
               (:documentation "Return quotient and remainder from division of x by y."
                :arguments 
                  ( ("x" variable nil (reparse-symbol function_parameters) [10042 10043])
                    ("y" variable nil (reparse-symbol function_parameters) [10045 10046]))                  )
                nil [10031 10151])
            ("XyzVector" type
               (:documentation "Subclass of numpy's ndarray with x/y/z initialiser and property syntax."
                :superclasses ("np.ndarray")
                :members 
                  ( ("__new__" function (:arguments 
                      ( ("cls" variable nil (reparse-symbol function_parameters) [10303 10306])
                        ("x" variable nil (reparse-symbol function_parameters) [10308 10309])
                        ("y" variable nil (reparse-symbol function_parameters) [10311 10312])
                        ("z" variable nil (reparse-symbol function_parameters) [10314 10315]))                      ) (reparse-symbol indented_block_body) [10291 10507])
                    ("from_array" function
                       (:decorators 
                          ( ("classmethod" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("cls" variable nil (reparse-symbol function_parameters) [10544 10547])
                            ("array" variable nil (reparse-symbol function_parameters) [10549 10554]))                          )
                        (reparse-symbol indented_block_body) [10512 10606])
                    ("x" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10631 10635]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [10611 10661])
                    ("x" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10686 10690])
                            ("value" variable nil (reparse-symbol function_parameters) [10692 10697]))                          
                        :decorators 
                          ( ("x.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [10666 10724])
                    ("y" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10749 10753]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [10729 10779])
                    ("y" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10804 10808])
                            ("value" variable nil (reparse-symbol function_parameters) [10810 10815]))                          
                        :decorators 
                          ( ("y.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [10784 10842])
                    ("z" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10867 10871]))                          
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [10847 10897])
                    ("z" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10922 10926])
                            ("value" variable nil (reparse-symbol function_parameters) [10928 10933]))                          
                        :decorators 
                          ( ("z.setter" function (:type "decorator") nil nil))                          )
                        (reparse-symbol indented_block_body) [10902 10960])
                    ("__str__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10977 10981]))                          
                        :documentation "Override superclass __str__")
                        (reparse-symbol indented_block_body) [10965 11057])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11075 11079]))                          )
                        (reparse-symbol indented_block_body) [11062 11200]))                  
                :type "class")
                nil [10176 11200])
            ("Position" type
               (:superclasses ("XyzVector")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [11233 11237]))                  
                :type "class")
                nil [11202 11238])
            ("Velocity" type
               (:superclasses ("XyzVector")
                :members 
                  ( ("pass" code nil (reparse-symbol indented_block_body) [11271 11275]))                  
                :type "class")
                nil [11240 11276])
            ("StateVector" variable nil nil [11278 11343])
            ("OrbitalElements" variable nil nil [11345 11461])
            ("Anomaly" type
               (:documentation "This package allows an anomaly to be represented and retrieved
    unambiguously.
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("super" code nil (reparse-symbol indented_block_body) [11634 11652])
                            ("valid_args" variable nil (reparse-symbol indented_block_body) [11685 11718])
                            ("extra_args" code nil (reparse-symbol indented_block_body) [11728 11772])
                            ("if" code nil (reparse-symbol indented_block_body) [11819 11912])
                            ("if" code nil (reparse-symbol indented_block_body) [11965 12038])
                            ("if" code nil (reparse-symbol indented_block_body) [12152 12280])
                            ("kwargs" variable nil (reparse-symbol indented_block_body) [12339 12414])
                            ("self, self" code nil (reparse-symbol indented_block_body) [12424 12465]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [11609 11613])
                            ("kwargs" variable nil (reparse-symbol function_parameters) [11615 11623]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [11596 12466])
                    ("M" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12477 12481])
                            ("e" variable nil (reparse-symbol function_parameters) [12483 12484]))                          )
                        (reparse-symbol indented_block_body) [12471 12735])
                    ("E" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [12746 12750])
                            ("e" variable nil (reparse-symbol function_parameters) [12752 12753]))                          )
                        (reparse-symbol indented_block_body) [12740 13004])
                    ("f" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [13015 13019])
                            ("e" variable nil (reparse-symbol function_parameters) [13021 13022]))                          )
                        (reparse-symbol indented_block_body) [13009 13268]))                  
                :type "class")
                nil [11472 13268]))          
      :file "utilities.py"
      :pointmax 13268
      :fsize 13275
      :lastmodtime '(23530 24179 893515 0)
      :unmatched-syntax nil))
  :file "!home!jbailey!.local!lib!python2.7!site-packages!orbital!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
